<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="fishgame.css">
        <title>Fishing Game</title>
    </head>

    <!--
        Created by PAVITRA KUMAR

        Finished on 22.09.2023

        I hope you like it 😊

        Feedback is very appreciated 👍

        You have to move the cursor to catch the fish! 🐟🐟🐟
    -->
    <body>
        <div class="project">
            <div id = "sky"></div>
            <div id="boat">
                <div id="flag">
                    <img src="https://imgur.com/96AlkBK.jpg" class="fish1"></img>
                    <div id="fish1val">: 0</div>
                    <img src="https://imgur.com/tqSQ4sW.jpg" class="fish2"></img>
                    <div id="fish2val">: 0</div>
                    <img src="https://imgur.com/iBUPvny.jpg" class="fish3"></img>
                    <div id="fish3val">: 0</div>
                    <img src="https://imgur.com/86QbBnx.jpg" class="fish4"></img>
                    <div id="fish4val">: 0</div>
                </div>
            </div>
            <div id="rod"></div>
            <div id="water"></div>
        </div>
        <script src="fishgame.js"></script>
    </body>
</html>




#water {
    background: linear-gradient(
      to bottom,
      rgba(0, 255, 255, 0.7),
      rgba(0, 0, 50, 0.9)
    );
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 70%;
  }
  
  #sky{
    position:fixed;
    left:0; top:0;
    width:100%; height:30%;
    background:linear-gradient(to bottom, white, blue 40%);
  }
  
  #boat {
    width: 250px;
    height: 80px;
    background: linear-gradient(to bottom, #420, #753);
    left: calc(50% - 125px);
    bottom: calc(70% - 55px);
    position: fixed;
    border-radius: 0% 100% 50% 50% / 0% 0% 100% 100%;
    animation-name: float;
    animation-iteration-count: infinite;
    animation-duration: 3s;
    transform: rotate(3deg);

    border: 3px solid #420;
  }
  
  @keyframes float {
    50% {
      transform: rotate(-3deg);
    }
  }
  
  #flag {
    position: absolute;
    width: 90px;
    height: auto;
    left: 10%;
    bottom: calc(100% + 50px);
    background: #eee;
    border: 2px solid purple;
  }
  
  #flag::before {
    content: "";
    position: absolute;
    width: 8px;
    height: 50px;
    background: #420;
    left: calc(50% - 4px);
    top: 100%;
  }
  
  .fish {
    position: absolute;
    width: 55px;
    height: 32px;
    border: 50%;
    left: 101vw;
    top: 0;
    transition: left 0.1s, top 1s;
    transition-timing-function: linear;
  }
  
  #rod {
    position: fixed;
    width: 7px;
    height: 50px;
    background: black;
    left: calc(50% + 60px);
    top: calc(30% - 70px);
    transition: height 0.1s;
    transition-timing-function: linear;
    border-radius:10px;
  }
  
  #rod::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 50px;
    background: linear-gradient(to bottom, black, #420, #420);
    transform-origin: 50% 0;
    transform: rotate(30deg);
    z-index: -1;
    border-radius:15px;
  }
  
  #rod::after {
    content: "";
    position: absolute;
    width: 400%;
    height: 40px;
    background: transparent;
    left: -6px;
    bottom: -5px;
    border-bottom: 7px solid black;
    border-right: 1px solid transparent;
    border-left: 7px solid transparent;
    border-radius: 50%;
  }
  
  
  #flag {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    gap: 0px 0px;
    grid-auto-flow: row;
    grid-template-areas:
      "fish1 fish1val"
      "fish2 fish2val"
      "fish3 fish3val"
      "fish4 fish4val";
  }
  
  .fish1 { 
    grid-area: fish1; 
  }
  
  .fish1, .fish2, .fish3, .fish4{
    width:25px; height:auto;
    position:relative;
  }
  
  #fish1val { grid-area: fish1val; }
  
  .fish2 { grid-area: fish2; }
  
  .fish3 { grid-area: fish3; }
  
  #fish2val { grid-area: fish2val; }
  
  #fish3val { grid-area: fish3val; }
  
  .fish4 { grid-area: fish4; }
  
  #fish4val { grid-area: fish4val; }



  class Fish {
    speed = 20;
    bgd = "";
    position = window.innerWidth;
    topPosition = Math.floor(
      Math.random() * document.getElementById("water").offsetHeight
    );
    able = true;
    element = "";
  
    constructor(sp, bg) {
      this.speed = sp;
      this.bgd = bg;
      this.element = document.createElement("div");
      document.getElementById("water").appendChild(this.element);
      this.element.classList = "fish";
      this.element.style.top = this.topPosition + "px";
      this.element.style.background = `url(${this.bgd}.jpg)`
      this.element.style.backgroundSize = "cover";
      this.element.style.backgroundPosition = "center";
    }
    //moving the element to the left.
    updateDiv() {
      this.element.style.left = this.position + "px";
    }
    //Swiming to left. Not stopping until the fish reaches the end or is caught.
    swim() {
      if (this.position > -100 && this.able == true) {
        this.position -= this.speed;
        this.updateDiv(); 
        // here this != undefined because of arrow function
        setTimeout(() => {
          this.swim();
        }, 50);
      }
    }
  }
  
  var fList = []; //List of fishes.
  //Checking for the collision between the rod and any of the fish.
  function checkForCollision() {
    for (let k = 0; k < fList.length; k++) {
      if (
        fList[k].topPosition <
          document.getElementById("rod").offsetHeight +
            30 -
            window.innerHeight / 7 &&
        fList[k].topPosition >
          document.getElementById("rod").offsetHeight -
            30 -
            window.innerHeight / 7 &&
        rod.empty
      ) {
        if (
          fList[k].position > document.getElementById("rod").offsetLeft - 30 &&
          fList[k].position < document.getElementById("rod").offsetLeft &&
          rod.empty &&
          fList[k].able
        ) {
          //locking the rod and bringing the fish to the top.
          fList[k].able = false;
          fList[k].element.style.top = "-40px";
          rod.empty = false;
          //Deleting the element and freeing the rod.
          setTimeout(function () {
            addNumberOfFish(fList[k].bgd)
            fList[k].element.remove();
            fList.splice(fList[k], 1);
            rod.empty = true;
          }, 1000);
        }
      }
    }
  }
  
  const rod = {
    empty: true
  };
  
  //moving the rod up and down. I know these 2 functions are not productive but i had no better solution.
  function move(e) {
    if (rod.empty == true) {
      let Y = e.clientY - window.innerHeight / 7 - 25;
      //let YbutForPhone = e.touches[0].clientY;
      document.getElementById("rod").style.height = Y + "px";
      checkForCollision();
    } else {
      document.getElementById("rod").style.transition = "height 1s";
      document.getElementById("rod").style.transitionTimingFunction = "linear";
      document.getElementById("rod").style.height = "50px";
      setTimeout(function () {
        document.getElementById("rod").style.transition = "height 0.1s";
        document.getElementById("rod").style.transitionTimingFunction = "linear";
      }, 1100);
    }
  }
  //The same but for phone.
  function movePh(e) {
    if (rod.empty == true) {
      let Y = e.touches[0].clientY;
      document.getElementById("rod").style.height = Y + "px";
      checkForCollision();
    } else {
      document.getElementById("rod").style.transition = "height 1s";
      document.getElementById("rod").style.transitionTimingFunction = "linear";
      document.getElementById("rod").style.height = "50px";
      setTimeout(function () {
        document.getElementById("rod").style.transition = "height 0.1s";
        document.getElementById("rod").style.transitionTimingFunction = "linear";
      }, 1100);
    }
  }
  
  //List of fish images.
  const fishImages = [
    "https://imgur.com/96AlkBK",
    "https://imgur.com/tqSQ4sW",
    "https://imgur.com/iBUPvny",
    "https://imgur.com/86QbBnx"
  ]
  
  //Creating a new fish and adding it to the list.
  function newFish() {
    fList.push(new Fish(Math.floor(Math.random() * 5) + 2, fishImages[Math.floor(Math.random() * fishImages.length)]));
    fList[fList.length - 1].swim();
  }
  
  
  //Adding +1 fish caught in the text on the boat.
  var orangeFish = 0;
  var aquaFish = 0;
  var blueFish = 0;
  var greenFish = 0;
  function addNumberOfFish(f){
    switch(f){
      case "https://imgur.com/96AlkBK":
        orangeFish++;
        document.getElementById("fish1val").innerText = `: ${orangeFish}`;
        break;
       case "https://imgur.com/tqSQ4sW":
        aquaFish++;
        document.getElementById("fish2val").innerText = `: ${aquaFish}`;
        break;
       case "https://imgur.com/iBUPvny":
        blueFish++;
        document.getElementById("fish3val").innerText = `: ${blueFish}`;
        break;
       case "https://imgur.com/86QbBnx":
        greenFish++;
        document.getElementById("fish4val").innerText = `: ${greenFish}`;
        break;
    }
  }
  
  alert("The Y position of the hook moves according to the position of your cursor or finger on the screen. Move your cursor/finger to catch the fish. You won't get anything from standing still and waiting for the fish to get caught. Happy Fishing!")
  
  window.onload = function () {
    //Adding a fish at a certain interval.
    setInterval(function () {
      newFish();
    }, 12000);
    setInterval(function () {
      newFish();
    }, 2500);
    setInterval(function () {
      newFish();
    }, 6000);
    //Mouse and Touch events for the rod position.
    document.getElementById("water").addEventListener("mousemove", move);
    document.getElementById("water").addEventListener("touchmove", movePh);

    
